<%
# Circular Reference Category Tree Parser by Mark Daggett W00t :-) 
# 1. Create local object parentHash
#
# 2. Assign default values to a category, which will represent the absolute root of the menu. 
#    Add this new object to the parent hash with the key equal to â€˜0â€™ and the object reference as the value.
#
# 3. Loop through the array of categories passed in through the remote service
#   1. Create an instance of the category object for each object in the array.
#
#   2. Assign all the remote category properties to the new object (name, description, id etc.)
#
#   3. Attempt to assign its parent to a value in the parent Hash.
#     1. If undefined then do nothing.
#
#     2. If defined then assign the hash value as the parent and assign itself as 
#        a child inside the found parent object. The parent will then return its reference 
#        of children to the new child so that they can use as a sibling Hash.
#
# 4. Assign category object to the parent hash using the id as the key


 # TODO: The creation of this tree does not need to happen every page load, it could happen on login and then be expired if categories are added etc.

 -%>
 <% 
-%>   
   <%= parse_tree(session[:category_tree][:root][:children]) %>

 <%
  # To draw the tree use this structure and class names  
  
  # <ul class ="tree"
  # <li><a href="#">item 1</a>
  #     <ul>
  #       <li><a href="#">item 1.1</a></li>
  #       <li class="closed"><a href="#">item 1.2</a>
  #         <ul>
  #           <li><a href="#">item 1.2.1</a></li>
  #           <li><a href="#">item 1.2.2</a></li>
  #           <li><a href="#">item 1.2.3</a></li>
  #         </ul>
  #       </li>
  #       <li><a href="#">item 1.3</a></li>
  #     </ul>
  #   </li>
  #   <li><a href="#">item 2</a>
  #     <ul>
  #       <li><a href="#">item 2.1</a></li>
  #       <li><a href="#">item 2.2</a></li>
  #       <li><a href="#">item 2.3</a></li>
  #     </ul>
  #   </li>
  # </ul>
 -%>